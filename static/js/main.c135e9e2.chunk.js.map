{"version":3,"sources":["component/Square.js","component/Board.jsx","component/Game.js","index.js"],"names":["Square","className","onClick","props","style","this","background","value","React","Component","Board","renderSquare","i","winLine","includes","squares","renderRow","indexRow","rowData","Array","col","fill","index","position","renderBoard","data","row","Game","handleClick","history","state","slice","stepNumber","current","length","winner","xIsNext","win","calculateWinner","console","log","setState","concat","colH","rowH","Math","ceil","jumpTo","step","selectedItem","move","desc","sort","isDesc","findWinLine","numStep","lines","j","stepI","stepJ","line","push","Number","moves","squaresWin","map","e","every","val","arr","status","realPosition","text","sortTitle","class","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c135e9e2.chunk.js","sourcesContent":["import React from \"react\"\r\nclass Square extends React.Component{\r\n    render(){\r\n        return (\r\n            <button \r\n                className=\"square\" \r\n                onClick={()=>this.props.onClick()}\r\n                style={this.props.background?{background:'yellow'}:{background:'white'}}\r\n            >\r\n                {this.props.value}\r\n            </button>\r\n        )\r\n    }\r\n}\r\nexport default Square","import Square from \"./Square\";\r\nimport React from \"react\";\r\nclass Board extends React.Component{\r\n    renderSquare=(i)=>{\r\n        return(\r\n            <Square\r\n            background={this.props.winLine?this.props.winLine.includes(i)?true:false:false}\r\n            value={this.props.squares[i]}\r\n            onClick={()=>this.props.onClick(i)}\r\n            />\r\n        )\r\n        \r\n    }\r\n    renderRow=(indexRow) =>{\r\n        let rowData= Array(this.props.col).fill(null)\r\n        for (let index = 0; index < this.props.col; index++) {\r\n            let position= (indexRow)*(this.props.col)+index+1;\r\n\r\n            rowData[index]=(\r\n                this.renderSquare(position)\r\n            )\r\n        }\r\n        return rowData;\r\n    }\r\n    renderBoard=() =>{\r\n        let data= Array(this.props.row).fill(null)\r\n        for (let index = 0; index < this.props.row; index++) {\r\n            data[index]=(\r\n                <div className=\"board-row\">\r\n                    {this.renderRow(index)}\r\n                </div>\r\n            )\r\n            \r\n        }\r\n        return data;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.renderBoard()}   \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Board","import Board from \"./Board\"\r\nimport React from \"react\"\r\nclass Game extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            history:[{\r\n                squares:Array(props.row*props.col).fill(null),\r\n                winLine:Array(props.numStep).fill(null),\r\n                winner:\"\",\r\n                colH:Number(-1),\r\n                rowH:Number(-1),\r\n            }],\r\n            lines:this.findWinLine(props.numStep),\r\n            xIsNext:true,\r\n            isDesc:true,\r\n            stepNumber:0, \r\n            moves:[]\r\n        }\r\n    }\r\n    handleClick=(i)=>{\r\n        const history=this.state.history.slice(0,this.state.stepNumber+1);\r\n        const current = history[history.length-1]\r\n        const squares=current.squares.slice();\r\n        \r\n        if(current.winner.length>0||squares[i]){\r\n            return;\r\n        }\r\n        squares[i]=this.state.xIsNext?\"X\":\"O\"\r\n        const win=this.calculateWinner(squares)\r\n        console.log(win)\r\n        console.log(this.state.history)\r\n        this.setState({\r\n            history:history.concat([{\r\n                squares:squares,\r\n                colH:(i%this.props.col)===0?this.props.col-1:i%this.props.col-1,\r\n                rowH:Math.ceil(i/this.props.col)-1,\r\n                winLine:win?win.winLine:null,\r\n                winner:win?win.winner:\"\"\r\n\r\n            }]),\r\n            stepNumber:history.length,\r\n            xIsNext:!this.state.xIsNext\r\n        })\r\n    }\r\n    jumpTo=(step)=>{\r\n        this.setState({\r\n            stepNumber:step,\r\n            xIsNext:(step%2)===0,\r\n        })\r\n    }\r\n    selectedItem=(move,desc)=>{\r\n        if(move===this.state.stepNumber){\r\n            return(\r\n                <strong>{desc}</strong>\r\n            )\r\n        }\r\n        else{\r\n            return(desc)\r\n        }\r\n    }\r\n    sort=()=>{\r\n        this.setState({\r\n            isDesc:!this.state.isDesc,\r\n        })\r\n    }\r\n\r\n    findWinLine=(numStep)=>{\r\n        let lines=[]\r\n        \r\n        for (let i = 0; i < this.props.row; i++) {\r\n            \r\n            for (let j = 0; j < this.props.col; j++) {\r\n                //vertical\r\n                if((i+numStep)<=this.props.row){\r\n                    let stepI=i;\r\n                    let stepJ=j;\r\n                    let line=Array(numStep);\r\n                    for (let index = 0; index <numStep; index++) {\r\n                        line[index]=(stepI++)*this.props.col+stepJ;    \r\n                    }\r\n                    lines.push(line.slice())\r\n                }\r\n                //horizontal\r\n                if(j+numStep<=this.props.col){\r\n                    let step=j;\r\n                    let line=Array(numStep);\r\n                    for (let index = 0; index <numStep; index++) {\r\n                        line[index]=i*this.props.col+step++;    \r\n                    }\r\n                    lines.push(line.slice())\r\n                }\r\n                //diagonal line\r\n                if(i+numStep<=this.props.row&&j+numStep<= this.props.col){\r\n                    let stepI=i;\r\n                    let stepJ=j;\r\n                    let line=Array(numStep);\r\n                    for (let index = 0; index <numStep; index++) {\r\n                        line[index]=(stepI++)*this.props.col+stepJ++;\r\n                    }\r\n                    lines.push(line.slice())\r\n                  \r\n                }\r\n                if(i+numStep<=this.props.row && j-(numStep-1)>=0){\r\n                    let stepI=i;\r\n                    let stepJ=j;\r\n                    let line=Array(numStep);\r\n                    for (let index = 0; index <numStep; index++) {\r\n                        line[index]=(stepI++)*this.props.col+stepJ--;\r\n                    }\r\n                    lines.push(line.slice())\r\n                }\r\n                 \r\n            }\r\n            \r\n        }\r\n        return lines;\r\n    }\r\n    calculateWinner(squares){\r\n        for (let i = 0; i < this.state.lines.length; i++) {\r\n          const win=this.state.lines[i];\r\n          let squaresWin=win.map(e=>squares[e])\r\n          if(squaresWin.every((val,i,arr)=>val===arr[0]&&val)){\r\n              return {winner: squaresWin[0],winLine:win}\r\n          }\r\n        }\r\n        return null;\r\n    }\r\n    render(){\r\n        const history=this.state.history\r\n        const current= history[this.state.stepNumber]\r\n        const winner=current.winner\r\n        const moves = history.map((move,index) => {\r\n            const realPosition=this.state.isDesc?index:this.state.history.length-index-1\r\n            const text = \r\n              'Go to move #' +(realPosition)+ \" (\"+history[realPosition].colH+\", \"+history[realPosition].rowH+\")\"\r\n              \r\n            return (\r\n              <li key={index}>\r\n                <button onClick={() => this.jumpTo(realPosition)}>{this.selectedItem(realPosition,text)}</button>\r\n              </li>\r\n            );\r\n          });\r\n        \r\n        let status;\r\n        if(winner.length>0){\r\n            status= \"Winner: \"+winner;\r\n        }\r\n        else{\r\n            if(this.state.stepNumber===this.props.col*this.props.row){\r\n                status= \"Draw\"\r\n            }\r\n            else{\r\n                status=\"Next player: \"+(this.state.xIsNext?\"X\":\"O\");\r\n            }\r\n        }\r\n        let sortTitle=this.state.isDesc?\"Sort Descending\":\"Sort Acsending\"\r\n        return(\r\n            <div class=\"row\">\r\n                <div class=\"column\">\r\n                    <div className=\"game\">\r\n                        <div className=\"game-board\">\r\n                            <Board\r\n                            col={this.props.col}\r\n                            row={this.props.row}\r\n                            numStep={this.props.numStep}\r\n                            squares={current.squares}\r\n                            winLine={current.winLine}\r\n                            onClick={(i)=>this.handleClick(i)\r\n                            }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column\">\r\n                    <div className=\"game-info\">\r\n                        <div class=\"row\">\r\n                            <div class =\"column\">\r\n                                <div>{status}</div>\r\n                            </div>\r\n                            <div class =\"column\">\r\n                                <button onClick={()=>this.sort()}>{sortTitle}</button>\r\n                            </div>\r\n                        </div>\r\n                        <ol>{moves}</ol>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\nexport default Game","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './component/Game';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Game\n    col={6}\n    row={6}\n    numStep={5}\n     />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}